######################################################################
## Virtual host configration for <%= @hostname %>
######################################################################
# 
# Generated by Chef for <%= @node[:fqdn] %>
#
######################################################################

# Redirect requests for www.<%= @hostname %> to <%= @hostname %>
<VirtualHost "*:80">
    ServerName www.<%= @hostname %>

    <IfModule mod_rewrite.c>
        RewriteEngine On
        RewriteRule ^(.*)$ http://<%= @hostname %>$1 [R]
    </IfModule>
</VirtualHost>

# Main configuration block for this virtual host
<VirtualHost "*:80">

    # If the request uses the ServerName or ServerAlias as the server name, 
    # then this section will be used, otherwise they will be redirected to
    # the corporate site.

    ServerName <%= @hostname %>
    <% @srv_aliases.each do |srv_alias| -%>
    ServerAlias <%= srv_alias %>
    <% end -%>

    # The DocumentRoot isn't used for much, anything not inside a webapp.
    # Mainly this is used for the holding page.

    DocumentRoot /var/www/vhosts/<%= @hostname %>

    # These are the main ajp proxy directives, they tell Apache to pass requests
    # to Tomcat.
    
    # In this iteration, one web server is hardlinked to a backend appserver. In
    # the future, we'll do somethis more clever with mod_proxy_balancer

    <% @webapps.each do |webapp,params| -%>
    ProxyPass /<%= webapp %>     ajp://<%= params.fetch("appserver") %>:<%= params.fetch("port") %>/<%= webapp %>
    <% end -%>

    # Main access block, this allows anonymous access to everything by default
    <Location "/">
        Options FollowSymLinks
        Order allow,deny
        Allow from all
    </Location>

    # Restricted access for the Tomcat manager webapp, locked by IP address.
    <Location "/tomcat-manager">
        Order deny,allow
        Deny from all
        Allow from 127.0.0.1
        <% @restricted_ips.each do |ip| -%>
        Allow from <%= ip %>
        <% end -%>
    </Location>
    
    # Use the specified error page (under DocumentRoot) for the specified error codes.
    # They are prettier than the standard Apache pages.

    ErrorDocument 403 /403/index.html 
    ErrorDocument 404 /404/index.html 

    <IfModule mod_rewrite.c>
        RewriteEngine On
        
        <% if @holding_page == 'true' -%>
        # The holding page is ENABLED
        <% @webapps.each do |webapp,params| -%>
        RewriteRule ^/<% webapp -%> /holding.html [R]
        <% end -%>
        
        <% else -%>
        # The holding page is DISABLED
        RewriteRule ^/holding.html / [R]
        <% end -%>
        
        # Redirect access to the base URL to the <%= @primary_webapp %> index page
        RewriteRule ^/$ /<%= @primary_webapp %> [R,L]

    </IfModule>

    # Activity for this virtual host goes into separate logs
    
    # This statement figures out whether X-Forwarded-For is set.
    SetEnvIf X-FORWARDED-FOR "^.*\..*\..*\..*" behind-elb

    CustomLog "|/usr/sbin/rotatelogs <%= @node[:apache][:log_dir] %>/access-<%= @hostname %>.log.%Y%m%d 86400" mtm env=!behind-elb
    CustomLog "|/usr/sbin/rotatelogs <%= @node[:apache][:log_dir] %>/access-<%= @hostname %>.log.%Y%m%d 86400" mtm-elb env=behind-elb
    ErrorLog "|/usr/sbin/rotatelogs <%= @node[:apache][:log_dir] %>/errors-<%= @hostname %>.log.%Y%m%d 86400"
    
    # Remote logging directives
    CustomLog "|/usr/bin/logger -p local6.info -t <%= @hostname %>" mtm env=!behind-elb
    CustomLog "|/usr/bin/logger -p local6.info -t <%= @hostname %>" mtm-elb env=behind-elb 
    ErrorLog "|/usr/bin/logger -p local7.err -t <%= @hostname %>"
    

</VirtualHost>