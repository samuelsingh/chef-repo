#
# Generated by Chef
#
# Based on the Ubuntu apache2.conf

ServerRoot "<%= @node[:apache][:dir] %>"

#
# The accept serialization lock file MUST BE STORED ON A LOCAL DISK.
#
<% if @node[:platform] == "debian" || @node[:platform] == "ubuntu" -%>
LockFile /var/lock/apache2/accept.lock
<% else %>
LockFile logs/accept.lock
<% end -%>

#
# PidFile: The file in which the server should record its process
# identification number when it starts.
#
<% if @node[:platform] == "debian" || @node[:platform] == "ubuntu" -%>
PidFile /var/run/apache2.pid
<% elsif @node[:platform] == "centos" -%>
PidFile /var/run/httpd.pid
<% else -%>
PidFile logs/httpd.pid
<% end -%>

#
# Timeout: The number of seconds before receives and sends time out.
#
Timeout <%= @node[:apache][:timeout] %>

#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
KeepAlive <%= @node[:apache][:keepalive] %>

#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
MaxKeepAliveRequests <%= @node[:apache][:keepaliverequests] %>

#
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
#
KeepAliveTimeout <%= @node[:apache][:keepalivetimeout] %>

##
## Server-Pool Size Regulation (MPM specific)
## 

# prefork MPM
# StartServers: number of server processes to start
# MinSpareServers: minimum number of server processes which are kept spare
# MaxSpareServers: maximum number of server processes which are kept spare
# MaxClients: maximum number of server processes allowed to start
# MaxRequestsPerChild: maximum number of requests a server process serves
<IfModule mpm_prefork_module>
    StartServers          <%= @node[:apache][:prefork][:startservers] %>
    MinSpareServers       <%= @node[:apache][:prefork][:minspareservers] %>
    MaxSpareServers       <%= @node[:apache][:prefork][:maxspareservers] %>
    ServerLimit           <%= @node[:apache][:prefork][:serverlimit] %>
    MaxClients            <%= @node[:apache][:prefork][:maxclients] %>
    MaxRequestsPerChild   <%= @node[:apache][:prefork][:maxrequestsperchild] %>
</IfModule>

# worker MPM
# StartServers: initial number of server processes to start
# MaxClients: maximum number of simultaneous client connections
# MinSpareThreads: minimum number of worker threads which are kept spare
# MaxSpareThreads: maximum number of worker threads which are kept spare
# ThreadsPerChild: constant number of worker threads in each server process
# MaxRequestsPerChild: maximum number of requests a server process serves
<IfModule mpm_worker_module>
    StartServers          <%= @node[:apache][:worker][:startservers] %>
    MaxClients            <%= @node[:apache][:worker][:maxclients] %>
    MinSpareThreads       <%= @node[:apache][:worker][:minsparethreads] %>
    MaxSpareThreads       <%= @node[:apache][:worker][:maxsparethreads] %>
    ThreadsPerChild       <%= @node[:apache][:worker][:threadsperchild] %>
    MaxRequestsPerChild   <%= @node[:apache][:worker][:maxrequestsperchild] %>
</IfModule>

User <%= @node[:apache][:user] %>
Group <%= @node[:apache][:user] %>

#
# AccessFileName: The name of the file to look for in each directory
# for additional configuration directives.  See also the AllowOverride
# directive.
#

AccessFileName .htaccess

#
# The following lines prevent .htaccess and .htpasswd files from being 
# viewed by Web clients. 
#
<Files ~ "^\.ht">
    Order allow,deny
    Deny from all
</Files>

# Added as part of the standard Fabric Apache config
# Denies access to the tomcat WEB-INF directory
#
<FilesMatch "^WEB-INF">
    Order allow,deny
    Deny from all
    Satisfy All
</FilesMatch>

#
# DefaultType is the default MIME type the server will use for a document
# if it cannot otherwise determine one, such as from filename extensions.
# If your server contains mostly text or HTML documents, "text/plain" is
# a good value.  If most of your content is binary, such as applications
# or images, you may want to use "application/octet-stream" instead to
# keep browsers from trying to display binary files as though they are
# text.
#
DefaultType text/plain


#
# HostnameLookups: Log the names of clients or just their IP addresses
# e.g., www.apache.org (on) or 204.62.129.132 (off).
# The default is off because it'd be overall better for the net if people
# had to knowingly turn this feature on, since enabling it means that
# each client request will result in AT LEAST one lookup request to the
# nameserver.
#
HostnameLookups Off

# ErrorLog: The location of the error log file.
#
# Updated as part of the standard Fabric Apache configuration to allow piped log file rotation
#
ErrorLog "|/usr/sbin/rotatelogs <%= @node[:apache][:log_dir] %>/error.log.%Y%m%d 86400"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

# Include module configuration:
Include <%= @node[:apache][:dir] %>/mods-enabled/*.load
Include <%= @node[:apache][:dir] %>/mods-enabled/*.conf

# Include ports listing
Include <%= @node[:apache][:dir] %>/ports.conf

#
# The following directives define some format nicknames for use with
# a CustomLog directive (see below).
#

LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

# Added as part of the Fabric Apache configuration to generate custom mtm logs that include JSESSIONID
#
<IfModule mod_logio.c>
    LogFormat "%v %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O \"%{JSESSIONID}C\"" mtm
</IfModule>
<IfModule !mod_logio.c>
    LogFormat "%v %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{JSESSIONID}C\"" mtm
</IfModule>

# And the equivalents if behind ELB
# These replace the %h variable with the value of X-Forwarded-For
#

LogFormat "\"%{X-Forwarded-For}i\" %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined-elb
LogFormat "\"%{X-Forwarded-For}i\" %l %u %t \"%r\" %>s %b" common-elb

<IfModule mod_logio.c>
    LogFormat "%v \"%{X-Forwarded-For}i\" %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O \"%{JSESSIONID}C\"" mtm-elb
</IfModule>
<IfModule !mod_logio.c>
    LogFormat "%v \"%{X-Forwarded-For}i\" %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{JSESSIONID}C\"" mtm-elb
</IfModule>

# This statement figures out whether X-Forwarded-For is set.
# Something similar will need to be included in all Apache vhosts.
#
SetEnvIf X-FORWARDED-FOR "^.*\..*\..*\..*" behind-elb

# And picks the log format on that basis
#
CustomLog "|/usr/sbin/rotatelogs <%= @node[:apache][:log_dir] %>/access.log.%Y%m%d 86400" mtm env=!behind-elb
CustomLog "|/usr/sbin/rotatelogs <%= @node[:apache][:log_dir] %>/access.log.%Y%m%d 86400" mtm-elb env=behind-elb


# Include generic snippets of statements
Include <%= @node[:apache][:dir] %>/conf.d/

# Include the virtual host configurations:
Include <%= @node[:apache][:dir] %>/sites-enabled/
